/* This is cfunc.mod file auto generated by gen_con_info.py
        Developed by Sumanto Kar at IIT Bombay */

        
        #include <memory>
        #include <verilated.h>
        #include "Vi2c_master_top.h"
        #include <stdio.h>
        #include <stdio.h>
        #include <fstream>
        #include <stdlib.h>
        #include <string>
        #include <iostream>
        #include <cstring>
        using namespace std;
        
        extern "C" int temp_wb_clk_i[1024];
        extern "C" int port_wb_clk_i;
        extern "C" int temp_wb_rst_i[1024];
        extern "C" int port_wb_rst_i;
        extern "C" int temp_arst_i[1024];
        extern "C" int port_arst_i;
        extern "C" int temp_wb_adr_i[1024];
        extern "C" int port_wb_adr_i;
        extern "C" int temp_wb_dat_i[1024];
        extern "C" int port_wb_dat_i;
        extern "C" int temp_wb_we_i[1024];
        extern "C" int port_wb_we_i;
        extern "C" int temp_wb_stb_i[1024];
        extern "C" int port_wb_stb_i;
        extern "C" int temp_wb_cyc_i[1024];
        extern "C" int port_wb_cyc_i;
        extern "C" int temp_scl_pad_i[1024];
        extern "C" int port_scl_pad_i;
        extern "C" int temp_sda_pad_i[1024];
        extern "C" int port_sda_pad_i;
        extern "C" int temp_wb_dat_o[1024];
        extern "C" int port_wb_dat_o;
        extern "C" int temp_wb_ack_o[1024];
        extern "C" int port_wb_ack_o;
        extern "C" int temp_wb_inta_o[1024];
        extern "C" int port_wb_inta_o;
        extern "C" int temp_scl_pad_o[1024];
        extern "C" int port_scl_pad_o;
        extern "C" int temp_scl_padoen_o[1024];
        extern "C" int port_scl_padoen_o;
        extern "C" int temp_sda_pad_o[1024];
        extern "C" int port_sda_pad_o;
        extern "C" int temp_sda_padoen_o[1024];
        extern "C" int port_sda_padoen_o;
        extern "C" int fooi2c_master_top(int,int);
        
        void int2arri2c_master_top(int  num, int array[], int n)
        {   
            for (int i = 0; i < n && num>=0; i++) 
            {
                array[n-i-1] = num % 2;
                num /= 2;
                }
        }
        int arr2inti2c_master_top(int array[],int n)
        {   
            int i,k=0;
            for (i = 0; i < n; i++) 
                k = 2 * k + array[i];
            return k;
        }
        
        int fooi2c_master_top(int init,int count) 
        {
            static VerilatedContext* contextp = new VerilatedContext;
            static Vi2c_master_top* i2c_master_top[1024];
            count--;
            if (init==0) 
            {
                i2c_master_top[count]=new Vi2c_master_top{contextp};
                contextp->traceEverOn(true);
            }
            else
            {
                contextp->timeInc(1);
                printf("=============i2c_master_top : New Iteration===========");
                printf("\nInstance : %d\n",count);
                printf("\nInside foo before eval.....\n");
				printf("wb_clk_i=%d\n", i2c_master_top[count] ->wb_clk_i);
				printf("wb_rst_i=%d\n", i2c_master_top[count] ->wb_rst_i);
				printf("arst_i=%d\n", i2c_master_top[count] ->arst_i);
				printf("wb_adr_i=%d\n", i2c_master_top[count] ->wb_adr_i);
				printf("wb_dat_i=%d\n", i2c_master_top[count] ->wb_dat_i);
				printf("wb_we_i=%d\n", i2c_master_top[count] ->wb_we_i);
				printf("wb_stb_i=%d\n", i2c_master_top[count] ->wb_stb_i);
				printf("wb_cyc_i=%d\n", i2c_master_top[count] ->wb_cyc_i);
				printf("scl_pad_i=%d\n", i2c_master_top[count] ->scl_pad_i);
				printf("sda_pad_i=%d\n", i2c_master_top[count] ->sda_pad_i);
				printf("wb_dat_o=%d\n", i2c_master_top[count] ->wb_dat_o);
				printf("wb_ack_o=%d\n", i2c_master_top[count] ->wb_ack_o);
				printf("wb_inta_o=%d\n", i2c_master_top[count] ->wb_inta_o);
				printf("scl_pad_o=%d\n", i2c_master_top[count] ->scl_pad_o);
				printf("scl_padoen_o=%d\n", i2c_master_top[count] ->scl_padoen_o);
				printf("sda_pad_o=%d\n", i2c_master_top[count] ->sda_pad_o);
				printf("sda_padoen_o=%d\n", i2c_master_top[count] ->sda_padoen_o);
				i2c_master_top[count]->wb_clk_i = arr2inti2c_master_top(temp_wb_clk_i, port_wb_clk_i);
				i2c_master_top[count]->wb_rst_i = arr2inti2c_master_top(temp_wb_rst_i, port_wb_rst_i);
				i2c_master_top[count]->arst_i = arr2inti2c_master_top(temp_arst_i, port_arst_i);
				i2c_master_top[count]->wb_adr_i = arr2inti2c_master_top(temp_wb_adr_i, port_wb_adr_i);
				i2c_master_top[count]->wb_dat_i = arr2inti2c_master_top(temp_wb_dat_i, port_wb_dat_i);
				i2c_master_top[count]->wb_we_i = arr2inti2c_master_top(temp_wb_we_i, port_wb_we_i);
				i2c_master_top[count]->wb_stb_i = arr2inti2c_master_top(temp_wb_stb_i, port_wb_stb_i);
				i2c_master_top[count]->wb_cyc_i = arr2inti2c_master_top(temp_wb_cyc_i, port_wb_cyc_i);
				i2c_master_top[count]->scl_pad_i = arr2inti2c_master_top(temp_scl_pad_i, port_scl_pad_i);
				i2c_master_top[count]->sda_pad_i = arr2inti2c_master_top(temp_sda_pad_i, port_sda_pad_i);
				i2c_master_top[count]->eval();

                printf("\nInside foo after eval.....\n");
				printf("wb_clk_i=%d\n", i2c_master_top[count] ->wb_clk_i);
				printf("wb_rst_i=%d\n", i2c_master_top[count] ->wb_rst_i);
				printf("arst_i=%d\n", i2c_master_top[count] ->arst_i);
				printf("wb_adr_i=%d\n", i2c_master_top[count] ->wb_adr_i);
				printf("wb_dat_i=%d\n", i2c_master_top[count] ->wb_dat_i);
				printf("wb_we_i=%d\n", i2c_master_top[count] ->wb_we_i);
				printf("wb_stb_i=%d\n", i2c_master_top[count] ->wb_stb_i);
				printf("wb_cyc_i=%d\n", i2c_master_top[count] ->wb_cyc_i);
				printf("scl_pad_i=%d\n", i2c_master_top[count] ->scl_pad_i);
				printf("sda_pad_i=%d\n", i2c_master_top[count] ->sda_pad_i);
				printf("wb_dat_o=%d\n", i2c_master_top[count] ->wb_dat_o);
				printf("wb_ack_o=%d\n", i2c_master_top[count] ->wb_ack_o);
				printf("wb_inta_o=%d\n", i2c_master_top[count] ->wb_inta_o);
				printf("scl_pad_o=%d\n", i2c_master_top[count] ->scl_pad_o);
				printf("scl_padoen_o=%d\n", i2c_master_top[count] ->scl_padoen_o);
				printf("sda_pad_o=%d\n", i2c_master_top[count] ->sda_pad_o);
				printf("sda_padoen_o=%d\n", i2c_master_top[count] ->sda_padoen_o);
				int2arri2c_master_top(i2c_master_top[count] -> wb_dat_o, temp_wb_dat_o, port_wb_dat_o);
				int2arri2c_master_top(i2c_master_top[count] -> wb_ack_o, temp_wb_ack_o, port_wb_ack_o);
				int2arri2c_master_top(i2c_master_top[count] -> wb_inta_o, temp_wb_inta_o, port_wb_inta_o);
				int2arri2c_master_top(i2c_master_top[count] -> scl_pad_o, temp_scl_pad_o, port_scl_pad_o);
				int2arri2c_master_top(i2c_master_top[count] -> scl_padoen_o, temp_scl_padoen_o, port_scl_padoen_o);
				int2arri2c_master_top(i2c_master_top[count] -> sda_pad_o, temp_sda_pad_o, port_sda_pad_o);
				int2arri2c_master_top(i2c_master_top[count] -> sda_padoen_o, temp_sda_padoen_o, port_sda_padoen_o);

            }
            return 0;
        }